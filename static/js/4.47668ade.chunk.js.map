{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/SharedDocument.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Utils/Punycode.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Popup/CreatePollDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Stores/InstantViewStore.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","ForwardTargetChat","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","classNames","onClick","ChatTile","border","markSelected","markUnselected","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","cyrillicInput","isCyrillicPackId","packId","value","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","a","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","user_id","UserStore","getMyId","force","Promise","all","map","x","catch","e","chats","savedMessages","chatIds","chat_ids","store","FileStore","getStore","loadChatsContent","messageIds","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","link","key","message","copy","handleScheduledAction","action","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","aria-label","color","close","removeScheduledAction","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","photoSize","media","text","getInnerText","messageRef","current","targetChats","forEach","targetChatId","getInputMediaContent","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","console","log","forceUpdate","div","innerText","innerHTML","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","searchRef","trim","latinText","cyrillicText","searchResults","concat","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","clipboardData","getData","document","execCommand","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","foundChats","open","onClose","aria-labelledby","aria-describedby","dialog","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","autoFocus","enhance","compose","padding","spacing","unit","dialogContent","display","position","borderStyle","withTranslation","withSnackbar","UserStatusControl","onUpdateUserStatus","update","userId","user","status","getUserStatus","isAccent","isUserOnline","prevUserId","nextProps","nextState","on","removeListener","userStatusSubtitle","userStatusAccentSubtitle","secondary","dark","UserControl","handleClick","fullName","getUserFullName","UserTile","DialogStatus","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","showSavedMessages","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","leftIconButton","rightIconButton","margin","NotificationsControl","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","NotificationsListItem","button","listItem","variant","noWrap","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","in","timeout","unmountOnExit","component","disablePadding","inset","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","usernameLink","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","counters","list","scrollHeight","offsetHeight","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isMeChat","users","member","items","sort","y","getUserStatusOrder","style","whiteSpace","wordWrap","toUpperCase","withSaveRef","closeIconButton","nested","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","getChatUserId","minHeight","SharedDocument","handleOpenMessage","handleCloseContextMenu","messageId","handleForward","forwardMessages","handleDelete","can_be_deleted_for_all_users","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","stopPropagation","contextMenu","left","clientX","top","clientY","handleRevokeChange","handleCloseDelete","handleDeleteContinue","showOpenMessage","can_be_deleted_only_for_self","onContextMenu","getMedia","openMedia","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","root","menuListRoot","transitionDuration","control","label","minWidth","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","title","headerBackButton","Boolean","headerSearchButton","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","query","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","sharedMediaList","sharedMediaSearchList","default","Error","getItemTemplate","searchMessages","getHeader","hasSearch","onScroll","SharedAudios","propTypes","PropTypes","number","isRequired","func","bool","getStyles","SharedDocuments","punycode","utf16","decode","extra","len","charCodeAt","RangeError","encode","String","fromCharCode","base","damp","tmin","tmax","skew","maxint","encode_digit","d","flag","adapt","delta","numpoints","firsttime","k","Math","floor","preserveCase","n","out","bias","basic","j","ic","oldi","w","digit","cp","case_flags","input_length","lastIndexOf","splice","h","b","m","q","ijv","bcp","ToASCII","domain","domain_array","split","s","match","ToUnicode","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","error","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","tileColor","abs","charAt","showProgress","accentStyles","SharedLinks","web_page","SharedMediaHeaderControl","SharedMedia","handleChange","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","SharedPhoto","onClientUpdatePhotoBlob","thumbSize","fileId","thumbnailSize","getSize","src","getSrc","thumbSrc","isBlurredThumbnail","sharedPhotoContent","backgroundImage","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","backgroundColor","SharedPhotos","flexWrap","justifyContent","alignItems","alignContent","SharedVideo","onClientUpdateVideoThumbnailBlob","video","duration","isBlurred","THUMBNAIL_BLURRED_SIZE_90","getDurationString","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","file","voice","VoiceNoteTile","MessageAuthor","voiceNoteMeta","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","dialogChatId","TopChat","showOnline","PureComponent","userStatusRoot","right","bottom","zIndex","RecentlyFoundChat","FoundPublicChat","previousChatId","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","foundPublicChatActive","verifiedIcon","foundPublicChatSubtitle","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","foundMessageActive","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","command","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","arr","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","recentlyFound","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","keys","topPromise","category","recentlyFoundPromise","handleRecentlyFound","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","recentlyFoundChats","localChats","globalChats","globalMessages","messagesCaption","search","closeSearchIconButton","ThemePicker","target","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","formControl","focused","name","group","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","LanguagePicker","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","MainMenuButton","onUpdateAuthorizationState","authorizationState","authorization_state","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","getAuthorizationState","mainMenuControl","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","aria-owns","aria-haspopup","menuIconButton","innerRef","searchIconButton","DialogsHeader","handleDone","logOut","searchInput","confirmLogoutDialog","dialogText","headerIconButton","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","window","location","reload","borderRadius","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","handleSearchTextChange","onSearchTextChange","DialogsList","ChatInfoDialog","handleClientUpdateDialogChatId","nextContext","dialogRoot","container","containerRoot","paperRoot","chatInfoRoot","modal","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","iconButton","disabled","canSendPhotos","canSendDocuments","canSendPolls","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","option","onDelete","handleInput","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","replace","POLL_OPTION_MAX_LENGTH","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","fontSize","POLL_OPTION_HINT_LENGTH","align","counterRoot","userSelect","isValidPoll","poll","question","options","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","every","isValidOption","reset","onUpdate","onClientUpdate","now","assign","addTdLibListener","addListener","removeTdLibListener","setMaxListeners","Infinity","source1","source2","Object","EventEmitter","CreatePollDialog","handleClientUpdateNewPoll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","clear","canAddOption","hint","contentRoot","flexGrow","POLL_QUESTION_HINT_LENGTH","dividerRoot","listRoot","disableTypography","typographyRoot","ReplyTile","isVideoNote","hasVideoNote","draggable","alt","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getTitle","getReplyPhotoSize","accentBackgroundLight","accentColorMain","replyContentSubtitle","InputBoxHeader","replyIcon","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","InputBoxControl","onClientUpdateStickerSend","item","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","replyToMessageId","setInputFocus","getChatDraftReplyToMessageId","openPasteDialog","setDraft","element","draft","getChatDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","input_message_text","handleSubmit","attachPhotoRef","click","handleAttachPhotoComplete","files","Array","from","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","setTyping","data","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteContinue","handleClosePaste","blob","sending_state","is_downloading_completed","updatePhotoBlob","clearDraft","invokeScheduledAction","newChatDraftMessage","alert","JSON","stringify","handleEmojiSelect","native","StickerStore","t0","performance","regex","emojiRegex","exec","t1","timestamp","stickers","Suspense","fallback","multiple","accept","FooterCommand","onCommand","NotificationsCommandControl","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","basicGroup","is_member","can_send_messages","is_channel","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","HeaderCommand","handleCancel","selectedItems","values","handleReply","next","count","canBeDeleted","canBeForwarded","canBeReplied","buttonLeft","buttonRight","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateChatTitle","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","getConnectionState","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","undefined","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","slider","thumb","min","max","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","repeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","getTimeString","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","audio","video_note","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","DayMeta","onClientUpdateLanguage","dayMeta","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","marginBottom","marginLeft","marginRight","Meta","editDate","onDateClick","views","meta","MessageStatus","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","prevMessageId","stateClassName","messageStatusSucceeded","messageStatusFailed","messageStatusPending","light","unreadSeparator","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","instantView","newWindow","opener","WebPage","displaySmallSize","displayExtraSmallSize","site_name","animation","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","handleInstantViewClick","getWebPage","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","instantViewButton","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","selectMessage","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","showUnreadSeparator","showTitle","edit_date","forward_info","getUnread","messageClassName","messageSelected","messageHighlighted","onMouseOver","onMouseOut","onAnimationEnd","messageSelectTick","messageAuthorColor","to","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","unpinned_message_id","handleUnpin","pinnedMessage","pinnedMessageContentSubtitle","_extends","arguments","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","fill","_ref","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","divider","chatPhotoStyle","ServiceMessage","getServiceMessageContent","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","getSticker","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","foundStickers","stickerIndex","data-sticker-id","autoplay","blur","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateFocusWindow","defferedActions","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onClientUpdateClearHistory","history","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","is_outgoing","replaceMessage","handleScrollBehavior","viewMessages","newState","scrollDownVisible","insertPrevious","filterMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","children","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","last_message","scrollBehaviorNone","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","handleListDragEnter","canSendFiles","handleScrollDownClick","lastReply","pop","separatorMessageId","throttle","historyEquals","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","STICKER_SET","dialogTitleRoot","disablePointerEvents","shareButtonRoot","flexDirection","flexShrink","pointerEvents","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","IVContext","createContext","withIV","IVComponent","Consumer","iv","RichText","richText","email_address","emailAddress","phone_number","texts","getRichText","object","Anchor","Caption","credit","hasText","isEmptyText","hastCredit","need_autoplay","IV_PHOTO_DISPLAY_SIZE","AuthorDate","author","publishDate","hasAuthor","hasDate","rel","dateTime","toISOString","dateFormat","Blockquote","pageBlocks","getPageBlock","Cover","cover","header","isOpen","Divider","Embedded","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","srcDoc","allowFullScreen","frameBorder","iframeResizerOptions","authorPhoto","ErrorHandler","errorInfo","componentStack","footer","Kicker","kicker","data-before","List","page_blocks","Paragraph","Photo","IV_PHOTO_SIZE","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","articles","publish_date","Subheader","subheader","Subtitle","Title","Bold","EmailAddress","href","Fixed","Icon","onClientUpdateDocumentThumbnailBlob","onClientUpdateDocumentBlob","thumbnailSrc","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","cells","isBordered","isStriped","striped","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","Location","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","ChatLink","needAutoplay","isLooped","openInstantViewMedia","block","fileCancel","is_downloading_active","remote","is_uploading_active","cancelUploadFile","download","updateAnimationBlob","setInstantViewViewerContent","updateAudioBlob","updateVideoBlob","is_open","posterPhoto","poster_photo","is_full_width","allow_scrolling","author_photo","zoom","is_bordered","is_striped","is_header","is_looped","is_rtl","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdateMediaThumbnailBlob","isPlaying","getBlob","getBlobUrl","thumbnailBlob","videoWidth","videoHeight","scale","handleContentClick","onVolumeChange","loop","FileProgress","prevMedia","getViewerFile","getViewerThumbnail","speed","MediaViewerButton","grow","cx","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","forwardIconStyle","transform","InstantViewMediaViewer","handleSave","saveMedia","prevInstantView","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","active","InstantViewStore","getCurrent","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","behavior","hiddenElement","getElementById","details","finished","currentElement","parentNode","nodeName","scrollIntoView","scrollTo","instantViewer","leftButton","Provider","closeButton","MediaViewerControl","getSenderUserId","dateHint","tileControl","Lottie","MediaViewerContent","updateAnimationData","isLottieMessage","getAnimationData","animationData","getMediaFile","getMediaPreviewFile","changeSpeed","lottieRef","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","defaultOptions","rendererSettings","preserveAspectRatio","isStopped","isPaused","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","maxCount","cancelPreloadMediaViewerContent","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateChatBlob","big","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","getPhotoFromChat","saveOrDownload","updateChatPhotoBlob","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","loadProfileMediaViewerContent","inHistory","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","withLanguage"],"mappings":"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","file":"static/js/4.47668ade.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, media, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !media && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (media) {\n                const content = getInputMediaContent(media, text);\n                if (content) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: content\n                    });\n                }\n\n                return;\n            }\n\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object,\n    media: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATIONS_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATIONS_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ctor', this.props.counters);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.componentDidMount');\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            classes,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n        console.log('ChatDetails.render counters', counters, migratedCounters);\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {isGroup && <MoreListItem chatId={chatId} />}\n                                {popup && !isGroup && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { getMedia, openMedia } from '../../../Utils/Message';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocument.css';\n\nconst styles = {\n    menuListRoot: {\n        minWidth: 150\n    }\n};\n\nclass SharedDocument extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, messageId, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        return (\n            <div className='shared-document' onContextMenu={this.handleContextMenu}>\n                {getMedia(message, () => openMedia(chatId, messageId, true))}\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nconst styles = {\n    headerBackButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    headerSearchButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInputRef.current.innerText;\n        const innerHTML = this.searchInputRef.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInputRef.current.innerHTML = '';\n        }\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className={classes.headerBackButton} onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className={classes.headerSearchButton} onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    static getStyles(theme) {\n        return {\n            sharedMediaList: {},\n            sharedMediaSearchList: {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            }\n        };\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { classes, minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        console.log('SharedMediaBase.render', items, messages);\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', classes.sharedMediaList)}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', classes.sharedMediaSearchList)}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedDocuments);\n","//https://stackoverflow.com/questions/183485/converting-punycode-with-dash-character-to-unicode\n//Javascript Punycode converter derived from example in RFC3492.\n//This implementation is created by some@domain.name and released into public domain\nfunction Punycode() {\n    // This object converts to and from puny-code used in IDN\n    //\n    // punycode.ToASCII ( domain )\n    //\n    // Returns a puny coded representation of \"domain\".\n    // It only converts the part of the domain name that\n    // has non ASCII characters. I.e. it dosent matter if\n    // you call it with a domain that already is in ASCII.\n    //\n    // punycode.ToUnicode (domain)\n    //\n    // Converts a puny-coded domain name to unicode.\n    // It only converts the puny-coded parts of the domain name.\n    // I.e. it dosent matter if you call it on a string\n    // that already has been converted to unicode.\n    //\n    //\n    this.utf16 = {\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\n        decode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value,\n                extra;\n            while (i < len) {\n                value = input.charCodeAt(i++);\n                if ((value & 0xf800) === 0xd800) {\n                    extra = input.charCodeAt(i++);\n                    if ((value & 0xfc00) !== 0xd800 || (extra & 0xfc00) !== 0xdc00) {\n                        throw new RangeError('UTF-16(decode): Illegal UTF-16 sequence');\n                    }\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                }\n                output.push(value);\n            }\n            return output;\n        },\n        encode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value;\n            while (i < len) {\n                value = input[i++];\n                if ((value & 0xf800) === 0xd800) {\n                    throw new RangeError('UTF-16(encode): Illegal UTF-16 value');\n                }\n                if (value > 0xffff) {\n                    value -= 0x10000;\n                    output.push(String.fromCharCode(((value >>> 10) & 0x3ff) | 0xd800));\n                    value = 0xdc00 | (value & 0x3ff);\n                }\n                output.push(String.fromCharCode(value));\n            }\n            return output.join('');\n        }\n    };\n\n    //Default parameters\n    var initial_n = 0x80;\n    var initial_bias = 72;\n    var delimiter = '\\x2D';\n    var base = 36;\n    var damp = 700;\n    var tmin = 1;\n    var tmax = 26;\n    var skew = 38;\n    var maxint = 0x7fffffff;\n\n    // decode_digit(cp) returns the numeric value of a basic code\n    // point (for use in representing integers) in the range 0 to\n    // base-1, or base if cp is does not represent a value.\n\n    function decode_digit(cp) {\n        return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;\n    }\n\n    // encode_digit(d,flag) returns the basic code point whose value\n    // (when used for representing integers) is d, which needs to be in\n    // the range 0 to base-1. The lowercase form is used unless flag is\n    // nonzero, in which case the uppercase form is used. The behavior\n    // is undefined if flag is nonzero and digit d has no uppercase form.\n\n    function encode_digit(d, flag) {\n        return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);\n        //  0..25 map to ASCII a..z or A..Z\n        // 26..35 map to ASCII 0..9\n    }\n    //** Bias adaptation function **\n    function adapt(delta, numpoints, firsttime) {\n        var k;\n        delta = firsttime ? Math.floor(delta / damp) : delta >> 1;\n        delta += Math.floor(delta / numpoints);\n\n        for (k = 0; delta > ((base - tmin) * tmax) >> 1; k += base) {\n            delta = Math.floor(delta / (base - tmin));\n        }\n        return Math.floor(k + ((base - tmin + 1) * delta) / (delta + skew));\n    }\n\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\n    // uppercase if flag is nonzero, and returns the resulting code point.\n    // The code point is unchanged if it is caseless.\n    // The behavior is undefined if bcp is not a basic code point.\n\n    function encode_basic(bcp, flag) {\n        bcp -= (bcp - 97 < 26) << 5;\n        return bcp + ((!flag && bcp - 65 < 26) << 5);\n    }\n\n    // Main decode\n    this.decode = function(input, preserveCase) {\n        // Dont use utf16\n        var output = [];\n        var case_flags = [];\n        var input_length = input.length;\n\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\n\n        // Initialize the state:\n\n        n = initial_n;\n        i = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: Let basic be the number of input code\n        // points before the last delimiter, or 0 if there is none, then\n        // copy the first basic code points to the output.\n\n        basic = input.lastIndexOf(delimiter);\n        if (basic < 0) basic = 0;\n\n        for (j = 0; j < basic; ++j) {\n            if (preserveCase) case_flags[output.length] = input.charCodeAt(j) - 65 < 26;\n            if (input.charCodeAt(j) >= 0x80) {\n                throw new RangeError('Illegal input >= 0x80');\n            }\n            output.push(input.charCodeAt(j));\n        }\n\n        // Main decoding loop: Start just after the last delimiter if any\n        // basic code points were copied; start at the beginning otherwise.\n\n        for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {\n            // ic is the index of the next character to be consumed,\n\n            // Decode a generalized variable-length integer into delta,\n            // which gets added to i. The overflow checking is easier\n            // if we increase i as we go, then subtract off its starting\n            // value at the end to obtain delta.\n            for (oldi = i, w = 1, k = base; ; k += base) {\n                if (ic >= input_length) {\n                    throw RangeError('punycode_bad_input(1)');\n                }\n                digit = decode_digit(input.charCodeAt(ic++));\n\n                if (digit >= base) {\n                    throw RangeError('punycode_bad_input(2)');\n                }\n                if (digit > Math.floor((maxint - i) / w)) {\n                    throw RangeError('punycode_overflow(1)');\n                }\n                i += digit * w;\n                t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                if (digit < t) {\n                    break;\n                }\n                if (w > Math.floor(maxint / (base - t))) {\n                    throw RangeError('punycode_overflow(2)');\n                }\n                w *= base - t;\n            }\n\n            out = output.length + 1;\n            bias = adapt(i - oldi, out, oldi === 0);\n\n            // i was supposed to wrap around from out to 0,\n            // incrementing n each time, so we'll fix that now:\n            if (Math.floor(i / out) > maxint - n) {\n                throw RangeError('punycode_overflow(3)');\n            }\n            n += Math.floor(i / out);\n            i %= out;\n\n            // Insert n at position i of the output:\n            // Case of last character determines uppercase flag:\n            if (preserveCase) {\n                case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);\n            }\n\n            output.splice(i, 0, n);\n            i++;\n        }\n        if (preserveCase) {\n            for (i = 0, len = output.length; i < len; i++) {\n                if (case_flags[i]) {\n                    output[i] = String.fromCharCode(output[i])\n                        .toUpperCase()\n                        .charCodeAt(0);\n                }\n            }\n        }\n        return this.utf16.encode(output);\n    };\n\n    //** Main encode function **\n\n    this.encode = function(input, preserveCase) {\n        //** Bias adaptation function **\n\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\n\n        if (preserveCase) {\n            // Preserve case, step1 of 2: Get a list of the unaltered string\n            case_flags = this.utf16.decode(input);\n        }\n        // Converts the input in UTF-16 to Unicode\n        input = this.utf16.decode(input.toLowerCase());\n\n        var input_length = input.length; // Cache the length\n\n        if (preserveCase) {\n            // Preserve case, step2 of 2: Modify the list to true/false\n            for (j = 0; j < input_length; j++) {\n                case_flags[j] = input[j] != case_flags[j];\n            }\n        }\n\n        var output = [];\n\n        // Initialize the state:\n        n = initial_n;\n        delta = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points:\n        for (j = 0; j < input_length; ++j) {\n            if (input[j] < 0x80) {\n                output.push(String.fromCharCode(case_flags ? encode_basic(input[j], case_flags[j]) : input[j]));\n            }\n        }\n\n        h = b = output.length;\n\n        // h is the number of code points that have been handled, b is the\n        // number of basic code points\n\n        if (b > 0) output.push(delimiter);\n\n        // Main encoding loop:\n        //\n        while (h < input_length) {\n            // All non-basic code points < n have been\n            // handled already. Find the next larger one:\n\n            for (m = maxint, j = 0; j < input_length; ++j) {\n                ijv = input[j];\n                if (ijv >= n && ijv < m) m = ijv;\n            }\n\n            // Increase delta enough to advance the decoder's\n            // <n,i> state to <m,0>, but guard against overflow:\n\n            if (m - n > Math.floor((maxint - delta) / (h + 1))) {\n                throw RangeError('punycode_overflow (1)');\n            }\n            delta += (m - n) * (h + 1);\n            n = m;\n\n            for (j = 0; j < input_length; ++j) {\n                ijv = input[j];\n\n                if (ijv < n) {\n                    if (++delta > maxint) return Error('punycode_overflow(2)');\n                }\n\n                if (ijv == n) {\n                    // Represent delta as a generalized variable-length integer:\n                    for (q = delta, k = base; ; k += base) {\n                        t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                        if (q < t) break;\n                        output.push(String.fromCharCode(encode_digit(t + ((q - t) % (base - t)), 0)));\n                        q = Math.floor((q - t) / (base - t));\n                    }\n                    output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));\n                    bias = adapt(delta, h + 1, h == b);\n                    delta = 0;\n                    ++h;\n                }\n            }\n\n            ++delta;\n            ++n;\n        }\n        return output.join('');\n    };\n\n    this.ToASCII = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/[^A-Za-z0-9-]/) ? 'xn--' + punycode.encode(s) : s);\n        }\n        return out.join('.');\n    };\n    this.ToUnicode = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/^xn--/) ? punycode.decode(s.slice(4)) : s);\n        }\n        return out.join('.');\n    };\n}\n\nconst punycode = new Punycode();\nexport default punycode;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { accentStyles } from '../../Theme';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedLink.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass SharedLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            console.log('getTitleFromUrl', punycode);\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, classes, messageId, webPage, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url);\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <div className='shared-link' onContextMenu={this.handleContextMenu}>\n                <div className={classNames('shared-link-photo', tileColor)}>\n                    {title.charAt(0)}\n                    {photo && (\n                        <Photo\n                            displaySize={90}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                            showProgress={false}\n                            style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                        />\n                    )}\n                </div>\n                <div className='shared-link-content'>\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {content}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedPhoto.css';\n\nconst styles = theme => ({\n    sharedPhotoContent: {\n        backgroundColor:\n            theme.palette.type === 'dark' ? theme.palette.background.paper : theme.palette.background.default\n    }\n});\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize)\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, classes, openMedia, style, showOpenMessage, t } = this.props;\n        const { thumbSize, photoSize, contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbSize);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div\n                    className={classNames('shared-photo-content', classes.sharedPhotoContent)}\n                    style={{ backgroundImage: `url(${thumbSrc})` }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedPhoto);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nconst styles = theme => ({\n    sharedMediaList: {\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    },\n    sharedMediaSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    }\n});\n\nclass SharedPhotos extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { getDurationString, getSize } from '../../../Utils/Common';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedVideo.css';\n\nconst styles = theme => ({\n    sharedPhotoContent: {\n        // backgroundColor: theme.palette.type === 'dark' ? theme.palette.background.paper : theme.palette.background.default\n    }\n});\n\nclass SharedVideo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, messageId, classes, openMedia, style, showOpenMessage, t } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n\n        return (\n            <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleContextMenu}>\n                <div className='shared-video-wrapper'>\n                    <div\n                        className={classNames('shared-video-content', { 'media-blurred': isBlurred })}\n                        style={{ backgroundImage: `url(${thumbSrc})` }}\n                    />\n                    <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}\n                    onClick={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'\n                    onClick={e => e.stopPropagation()}>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedVideo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nconst styles = theme => ({\n    sharedMediaList: {\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    },\n    sharedMediaSearchList: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        padding: '6px !important',\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start'\n    }\n});\n\nclass SharedVideos extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    voiceNoteMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, i18n, messageId, voiceNote, openMedia, showOpenMessage, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        if (!voiceNote) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className='shared-voice-note' onContextMenu={this.handleContextMenu}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                    <div className={classNames(classes.voiceNoteMeta, 'voice-note-meta')}>\n                        <AudioAction\n                            chatId={chatId}\n                            messageId={messageId}\n                            duration={duration}\n                            file={file}\n                            title={`${dateString}, `}\n                        />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(SharedMediaBase.getStyles),\n    withTranslation()\n);\n\nexport default enhance(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { borderStyle } from '../Theme';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ChatInfo.ctor');\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        console.log('ChatInfo.loadMigratedCounters');\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        console.log('ChatInfo.loadMigratedCounters chat', chat);\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_200MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    replyContentSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className={classNames('reply-content-subtitle', classes.replyContentSubtitle)}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n        if (!text.trim()) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        forwardMessages(id, messageIds);\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport './Meta.css';\n\nconst styles = theme => ({\n    meta: {\n        color: theme.palette.text.secondary,\n        '& a': {\n            color: theme.palette.text.secondary\n        }\n    }\n});\n\nclass Meta extends React.Component {\n    render() {\n        const { classes, date, editDate, onDateClick, t, views } = this.props;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', classes.meta)}>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MessageStatus.css';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    messageStatusFailed: {\n        background: theme.palette.error.light\n    },\n    messageStatusPending: {\n        background: theme.palette.primary.light\n    },\n    messageStatusSucceeded: {\n        background: theme.palette.primary.light\n    }\n});\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            prevChatId: props.chatId,\n            prevMessageId: props.messageId,\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                sendingState: props.sendingState\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.removeListener('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { sendingState, unread } = this.state;\n\n        let stateClassName = classNames('message-status-succeeded', classes.messageStatusSucceeded);\n        if (sendingState) {\n            stateClassName =\n                sendingState['@type'] === 'messageSendingStateFailed'\n                    ? classNames('message-status-failed', classes.messageStatusFailed)\n                    : classNames('message-status-pending', classes.messageStatusPending);\n        }\n\n        return unread && <i className={classNames('message-status-icon', stateClassName)} />;\n    }\n}\n\nMessageStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object\n};\n\nexport default withStyles(styles, { withTheme: true })(MessageStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { accentStyles } from '../../Theme';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    instantViewButton: {\n        width: 260,\n        marginTop: 12\n    }\n});\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage = () => {\n        const { classes, chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                onClick={this.handleInstantViewClick}\n                className={classNames(classes.instantViewButton, 'web-page-button')}>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getWebPage()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { getEmojiMatches, getText, getMedia, getUnread, getWebPage, openMedia } from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    messageSelectTick: {\n        background: theme.palette.primary.main,\n        color: 'white'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-short': !showTitle\n        });\n\n        const meta = <Meta date={date} editDate={edit_date} views={views} onDateClick={this.handleDateClick} />;\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <div className='message-left-padding'>\n                        {/*<div className='message-left-padding-wrapper'>*/}\n                        {/**/}\n                        {/*</div>*/}\n                        <CheckMarkIcon className={classNames('message-select-tick', classes.messageSelectTick)} />\n                        {this.unread && (\n                            <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                        )}\n                    </div>\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), React.createElement(\"title\", null, title), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className={classNames('stickers-hint', classes.borderColor, classes.root)}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: 0,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `MessagesList.getSnapshotBeforeUpdate\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${scrollTop}\n        //     list.scrollHeight=${scrollHeight}\n        //     list.offsetHeight=${offsetHeight}`\n        // );\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n        // console.log(\n        //     `MessagesList.componentDidUpdate\n        //     chat_id=${chatId} message_id=${messageId}\n        //     prevProps.chat_id=${prevProps.chatId} prevProps.message_id=${prevProps.messageId}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            //console.log('[Animation] componentDidUpdate');\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n                //console.log('[Animation] componentDidUpdate handleScrollBehavior');\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('MessagesList.shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('MessagesList.shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('MessagesList.shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('MessagesList.shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('MessagesList.shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('MessagesList.shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('MessagesList.shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('MessagesList.shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('MessagesList.shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('MessagesList.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.insertPrevious(filterMessages(history), newState, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper.props.children[1];\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        // console.log('MessagesList.handleScroll');\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= 0) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `MessagesList.handleScrollBehavior\n        //     chatId=${chatId} messageId=${messageId}\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.scrollHeight=${scrollHeight}\n        //     snapshot.offsetHeight=${offsetHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition after\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        let separatorMessageId = 0;\n        this.replace(separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n\n                  // return m;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <>\n            <MediaAnimation animation={animation} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </>\n    );\n}\n\nAnimation.propTypes = {\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport dateFormat from 'dateformat';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from 'react-iframe-resizer-super';\nimport Caption from './Caption';\n\nfunction Embedded(props) {\n    const { url, html, width, height, caption, isFullWidth, allowScrolling } = props;\n\n    const options = {\n        scrolling: allowScrolling\n    };\n\n    const hasWidthHeight = width > 0 && height > 0;\n\n    return (\n        <figure>\n            {hasWidthHeight ? (\n                <iframe\n                    src={url ? url : null}\n                    srcDoc={url ? null : html}\n                    width={width > 0 ? width : null}\n                    height={height > 0 ? height : null}\n                    allowFullScreen={isFullWidth}\n                    scrolling={allowScrolling ? 'auto' : 'no'}\n                    frameBorder={0}\n                />\n            ) : (\n                <ReactIframeResizer content={html} src={url} iframeResizerOptions={options} style={{ width: '100%' }} />\n            )}\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport dateFormat from 'dateformat';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Document from '../../Message/Media/Document';\nimport RichText from './RichText';\nimport ArrowDownwardIcon from '@material-ui/core/SvgIcon/SvgIcon';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return null;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        return (\n            <article dir={is_rtl ? 'rtl' : 'ltr'}>{page_blocks.map((x, index) => getPageBlock(x, iv, index))}</article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nexport default withIV(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.object\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getViewerFile, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, text } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        console.log('[IV] IVMediaViewerContent.render', this.props);\n        const { media } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, text, thumbnailWidth, thumbnailHeight, thumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                <MediaCaption text={<Caption text={text.text} credit={text.credit} />} />\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    text: PropTypes.object\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getViewerFile, saveMedia } from '../../Utils/File';\nimport { setInstantViewViewerContent } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nclass InstantViewMediaViewer extends React.Component {\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { media }\n        });\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { media, size, t, text } = this.props;\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        {/*<div className='media-viewer-button-placeholder' />*/}\n                        {/*<MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>*/}\n                        {/*    <NavigateBeforeIcon fontSize='large' />*/}\n                        {/*</MediaViewerButton>*/}\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} text={text} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' />\n                        </MediaViewerButton>\n                        {/*<MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>*/}\n                        {/*    <NavigateNextIcon fontSize='large' />*/}\n                        {/*</MediaViewerButton>*/}\n                    </div>\n                </div>\n\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText title={title} subtitle={null} />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass InstantViewStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.items = [];\n    };\n\n    onUpdate = update => {};\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateInstantViewContent': {\n                const { content } = update;\n\n                if (content) {\n                    this.items.push(content.instantView);\n                } else {\n                    this.items = [];\n                }\n\n                this.emit('clientUpdateInstantViewContent', update);\n\n                break;\n            }\n            case 'clientUpdateInstantViewUrl': {\n                this.emit('clientUpdateInstantViewUrl', update);\n                break;\n            }\n            case 'clientUpdateInstantViewViewerContent': {\n                this.emit('clientUpdateInstantViewViewerContent', update);\n                break;\n            }\n            case 'clientUpdatePrevInstantView': {\n                if (this.items.length <= 1) return;\n\n                this.items.pop();\n                const prevInstantView = this.items.pop();\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateInstantViewContent',\n                    content: {\n                        instantView: prevInstantView\n                    }\n                });\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    hasPrev() {\n        return this.items.length > 1;\n    }\n\n    getCurrent() {\n        return this.items.length > 0 ? this.items[this.items.length - 1] : null;\n    }\n}\n\nconst store = new InstantViewStore();\nwindow.instantView = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nconst styles = theme => ({\n    instantViewer: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    leftButton: {\n        color: theme.palette.text.secondary,\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        bottom: 0\n    },\n    closeButton: {\n        color: theme.palette.text.secondary,\n        position: 'fixed',\n        top: 0,\n        right: 0\n    }\n});\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                text: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, text } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (text !== nextState.text) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        document.addEventListener('keydown', this.onKeyDown, false);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        InstantViewStore.removeListener('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.removeListener(\n            'clientUpdateInstantViewViewerContent',\n            this.onClientUpdateInstantViewViewerContent\n        );\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null });\n            return;\n        }\n\n        const { media, caption, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                element.scrollTop = Math.min(element.scrollTop, 100);\n                setTimeout(() => {\n                    element.scrollTo({\n                        top: 0,\n                        behavior: 'smooth'\n                    });\n                }, 50);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n    };\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <>\n                <div\n                    ref={this.instantViewerRef}\n                    className={classNames('instant-viewer', classes.instantViewer)}\n                    onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className={classes.leftButton}\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            {hasScroll ? (\n                                <ExpandLessIcon className='media-viewer-button-icon' fontSize='large' />\n                            ) : (\n                                <ChevronLeftIcon className='media-viewer-button-icon' fontSize='large' />\n                            )}\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <IVContext.Provider value={instantView}>\n                                <Article ref={this.articleRef} />\n                            </IVContext.Provider>\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className={classes.closeButton} onClick={this.handleClose}>\n                            <CloseIcon className='media-viewer-button-icon' fontSize='large' />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} text={caption} />}\n            </>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getAnimationData, getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            file,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.removeListener('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo\n        } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}